version: "3.9"

services:
  nuclio:
    build:
      context: ./Nuclio
      dockerfile: Dockerfile.dev
      args:
        - version=${NUCLIO_VERSION}
    ports:
      - "${NUCLIO_DASHBOARD_PORT}:8070"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "/tmp:/tmp"
    restart: on-failure
  rabbitmq:
    build:
      context: ./RabbitMQ
      dockerfile: Dockerfile.dev
      args:
        - version=${RABBITMQ_VERSION}
    ports:
      - "${RABBITMQ_DASHBOARD_PORT}:15672"
      - "${RABBITMQ_MQTT_PORT}:1883"
      - "${RABBITMQ_AMQP_PORT}:5672"
    restart: on-failure
  database:
    build:
      context: ./Database
      dockerfile: Dockerfile.dev
      args:
        - version=${DATABASE_VERSION}
    restart: unless-stopped
    ports:
      - "${DATABASE_PORT}:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${DATABASE_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${DATABASE_PASSWORD}
    #volumes:
    #  - "./Database/db:/data/db"
  database_dashboard:
    build:
      context: ./Database-Dashboard
      dockerfile: Dockerfile.dev
      args:
        - version=latest
    restart: always
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=${DATABASE_USERNAME}
      - ME_CONFIG_MONGODB_ADMINPASSWORD=${DATABASE_PASSWORD}
      - ME_CONFIG_MONGODB_SERVER=${DATABASE_HOST}
      - ME_CONFIG_MONGODB_PORT=${DATABASE_PORT}
    ports:
      - "${DATABASE_DASHBOARD_PORT}:8081"
    depends_on:
      - "database"
  server:
    build:
      context: ./Server
      dockerfile: Dockerfile.dev
      args:
        - version=${NODE_VERSION}
    volumes:
      - "./Server/code/server.js:/usr/app/server.js"
    environment:
      - AMQP_URL=${AMQP_URL}
      - AMQP_QUEUE=${AMQP_QUEUE}
      - DATABASE_URL=${DATABASE_URL}
      - SMTP_HOST=${SMTP_HOST}
      - SMTP_PORT=${SMTP_PORT}
      - SMTP_SECURE=${SMTP_SECURE}
      - SMTP_USER=${SMTP_USER}
      - SMTP_PASS=${SMTP_PASS}
      - RECIPIENT_EMAIL_ADDRESS=${RECIPIENT_EMAIL_ADDRESS}
      - SENDER_EMAIL_ADDRESS=${SENDER_EMAIL_ADDRESS}
      - MOVEMENT_DETECTION_TIME_WINDOW_IN_SECONDS=${MOVEMENT_DETECTION_TIME_WINDOW_IN_SECONDS}
      - MINIMUM_NUMBER_OF_MOVEMENT_DETECTIONS=${MINIMUM_NUMBER_OF_MOVEMENT_DETECTIONS}
      - EMAIL_SENDING_TIME_WINDOW_IN_SECONDS=${EMAIL_SENDING_TIME_WINDOW_IN_SECONDS}
    depends_on:
      - "rabbitmq"
      - "nuclio"
      - "database"
    restart: always
